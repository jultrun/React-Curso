{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAa5C,OACI,uBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,MAKlB,UACI,8CACA,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,c,QCHlBG,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAClC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,0DAC6CO,UAAUF,GADvD,sDAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACFhB,GAAGgB,EAAIhB,GACPC,MAAMe,EAAIf,MACVC,IAAIc,EAAIC,OAAOC,iBAAiBhB,QARrB,kBAWZY,GAXY,4CAAH,sDCIPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAY,IAAD,EACVrB,mBAAS,CAC/B2B,KAAK,GACLO,SAAQ,IAHwB,mBAC7BC,EAD6B,KACtBC,EADsB,KAapC,OARAC,qBAAU,WACNjB,EAAQC,GAAUiB,MAAK,SAAAR,GACnBM,EAAS,CACLT,KAAKG,EACLI,SAAQ,SAGjB,CAACb,IACGc,EDVuBI,CAAalB,GAA/BU,EADuB,EAC5BJ,KAAYO,EADgB,EAChBA,QACnB,OACI,qCACI,oBAAIjB,UAAU,oCAAd,SAAmDI,IAClDa,GAAW,mBAAGjB,UAAU,mCAAb,qBACX,qBAAKA,UAAU,YAAf,SAEGc,EAAOF,KAAI,SAAAC,GACP,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIhB,aETpC0B,EAAe,WAAM,IAAD,EAEOxC,mBAAS,CAAC,oBAFjB,mBAEtByC,EAFsB,KAEV1C,EAFU,KAM7B,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEQ0C,EAAWZ,KAAI,SAAAR,GACX,OAAO,cAAC,EAAD,CAEPA,SAAUA,GADLA,YCd7BqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.955aa2eb.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {  \r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats =>[inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h1>Add Category</h1>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputValue}\r\n            />\r\n        </form>\r\n    );\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url =  `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=tYIgf6D3NSusLJgluliyq7h2HspAxWhV`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React,{} from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data:images,loading} = useFetchGifs(category);  \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">loading</p>}\r\n            {<div className=\"card-grid\">\r\n            {\r\n                images.map(img=>{\r\n                    return <GifGridItem key={img.id} {...img}/>\r\n                })\r\n            }\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import { useState,useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\nexport const useFetchGifs = (category)=>{\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n    useEffect(() => {\r\n        getGifs(category).then(img=>{\r\n            setstate({\r\n                data:img,\r\n                loading:false\r\n            });\r\n        });\r\n    }, [category])\r\n    return state;\r\n\r\n}","import {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState(['Hunter x hunter']);\r\n    /* const handleAdd = ()=>{\r\n        setCategories([...categories,'Sakura    '])\r\n    } */\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr/>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <ol>\r\n                {\r\n                    categories.map(category =>{\r\n                        return <GifGrid \r\n                        key={category}\r\n                        category={category}\r\n                        />   \r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}